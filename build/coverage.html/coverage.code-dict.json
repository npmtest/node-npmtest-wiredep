{"/home/travis/build/npmtest/node-npmtest-wiredep/test.js":"/* istanbul instrument in package npmtest_wiredep */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-wiredep/lib.npmtest_wiredep.js":"/* istanbul instrument in package npmtest_wiredep */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_wiredep = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_wiredep = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-wiredep/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-wiredep && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_wiredep */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_wiredep\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught.stack);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_wiredep.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_wiredep.rollup.js'] =\n            local.assetsDict['/assets.npmtest_wiredep.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_wiredep.__dirname +\n                    '/lib.npmtest_wiredep.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-wiredep/wiredep/wiredep.js":"'use strict';\n\nvar $ = {\n  _: require('lodash'),\n  'bower-config': require('bower-config'),\n  fs: require('fs'),\n  glob: require('glob'),\n  lodash: require('lodash'),\n  path: require('path'),\n  through2: require('through2')\n};\n\nvar config;\nvar helpers = require('./lib/helpers');\nvar fileTypesDefault = require('./lib/default-file-types');\n\n/**\n * Wire up the html files with the Bower packages.\n *\n * @param  {object} config  the global configuration object\n */\nfunction wiredep(opts) {\n  opts = opts || {};\n\n  var cwd = opts.cwd ? $.path.resolve(opts.cwd) : process.cwd();\n\n  config = module.exports.config = helpers.createStore();\n\n  config.set\n    ('on-error', opts.onError || function(err) { throw new Error(err); })\n    ('on-file-updated', opts.onFileUpdated || function() {})\n    ('on-main-not-found', opts.onMainNotFound || function() {})\n    ('on-path-injected', opts.onPathInjected || function() {});\n\n  config.set\n    ('bower.json', opts.bowerJson || JSON.parse($.fs.readFileSync($.path.join(cwd, './bower.json'))))\n    ('bower-directory', opts.directory || findBowerDirectory(cwd))\n    ('cwd', cwd)\n    ('dependencies', opts.dependencies === false ? false : true)\n    ('detectable-file-types', [])\n    ('dev-dependencies', opts.devDependencies)\n    ('exclude', Array.isArray(opts.exclude) ? opts.exclude : [ opts.exclude ])\n    ('file-types', mergeFileTypesWithDefaults(opts.fileTypes))\n    ('global-dependencies', helpers.createStore())\n    ('ignore-path', opts.ignorePath)\n    ('include-self', opts.includeSelf)\n    ('overrides', $._.extend({}, config.get('bower.json').overrides, opts.overrides))\n    ('src', [])\n    ('stream', opts.stream ? opts.stream : {});\n\n  $._.map(config.get('file-types'), 'detect').\n    forEach(function (fileType) {\n      Object.keys(fileType).\n        forEach(function (detectableFileType) {\n          var detectableFileTypes = config.get('detectable-file-types');\n\n          if (detectableFileTypes.indexOf(detectableFileType) === -1) {\n            config.set('detectable-file-types', detectableFileTypes.concat(detectableFileType));\n          }\n        });\n    });\n\n  if (!opts.stream && opts.src) {\n    (Array.isArray(opts.src) ? opts.src : [opts.src]).\n      forEach(function (pattern) {\n        config.set('src', config.get('src').concat($.glob.sync(pattern)));\n      });\n  }\n\n  require('./lib/detect-dependencies')(config);\n  require('./lib/inject-dependencies')(config);\n\n  return config.get('stream').src ||\n    Object.keys(config.get('global-dependencies-sorted')).\n      reduce(function (acc, depType) {\n        if (config.get('global-dependencies-sorted')[depType].length) {\n          acc[depType] = config.get('global-dependencies-sorted')[depType];\n        }\n\n        return acc;\n      }, { packages: config.get('global-dependencies').get() });\n}\n\nfunction mergeFileTypesWithDefaults(optsFileTypes) {\n  var fileTypes = $._.clone(fileTypesDefault, true);\n\n  $._(optsFileTypes).each(function (fileTypeConfig, fileType) {\n    // fallback to the default type for all html-like extensions (php, twig, hbs, etc)\n    fileTypes[fileType] = fileTypes[fileType] || fileTypes['default'];\n    $._.each(fileTypeConfig, function (config, configKey) {\n      if ($._.isPlainObject(fileTypes[fileType][configKey])) {\n        fileTypes[fileType][configKey] =\n          $._.assign(fileTypes[fileType][configKey], config);\n      } else {\n        fileTypes[fileType][configKey] = config;\n      }\n    });\n  });\n\n  return fileTypes;\n}\n\nfunction findBowerDirectory(cwd) {\n  var directory = $.path.join(cwd, ($['bower-config'].read(cwd).directory || 'bower_components'));\n\n  if (!$.fs.existsSync(directory)) {\n    var error = new Error('Cannot find where you keep your Bower packages.');\n    error.code = 'BOWER_COMPONENTS_MISSING';\n    config.get('on-error')(error);\n  }\n\n  return directory;\n}\n\nwiredep.stream = function (opts) {\n  opts = opts || {};\n\n  return $.through2.obj(function (file, enc, cb) {\n    if (file.isNull()) {\n      this.push(file);\n      return cb();\n    }\n\n    if (file.isStream()) {\n      this.emit('error', 'Streaming not supported');\n      return cb();\n    }\n\n    try {\n      opts.stream = {\n        src: file.contents.toString(),\n        path: file.path,\n        fileType: $.path.extname(file.path).substr(1)\n      };\n\n      file.contents = new Buffer(wiredep(opts));\n    } catch (err) {\n      this.emit('error', err);\n    }\n\n    this.push(file);\n    cb();\n  });\n};\n\n\nmodule.exports = wiredep;\n","/home/travis/build/npmtest/node-npmtest-wiredep/wiredep/lib/helpers.js":"'use strict';\n\n/**\n * Returns a set/get style internal storage bucket.\n *\n * @return {object} the API to set and retrieve data\n */\nmodule.exports.createStore = function () {\n  var bucket = {};\n\n  /**\n   * Sets a property on the store, with the given value.\n   *\n   * @param  {string} property  an identifier for the data\n   * @param  {*}      value     the value of the data being stored\n   * @return {function} the set function itself to allow chaining\n   */\n  var set = function (property, value) {\n    bucket[property] = value;\n    return set;\n  };\n\n  /**\n   * Returns the store item asked for, otherwise all of the items.\n   *\n   * @param  {string|undefined} property  the property being requested\n   * @return {*} the store item that was matched\n   */\n  var get = function (property) {\n    if (!property) {\n      return bucket;\n    }\n\n    return bucket[property];\n  };\n\n  return {\n    set: set,\n    get: get\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-wiredep/wiredep/lib/default-file-types.js":"var regex = {\n  block: {\n    '//': /(([ \\t]*)\\/\\/\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/\\s*endbower)/gi\n  }\n};\n\nmodule.exports = {\n  html: {\n    block: /(([ \\t]*)<!--\\s*bower:*(\\S*)\\s*-->)(\\n|\\r|.)*?(<!--\\s*endbower\\s*-->)/gi,\n    detect: {\n      js: /<script.*src=['\"]([^'\"]+)/gi,\n      css: /<link.*href=['\"]([^'\"]+)/gi\n    },\n    replace: {\n      js: '<script src=\"{{filePath}}\"></script>',\n      css: '<link rel=\"stylesheet\" href=\"{{filePath}}\" />'\n    }\n  },\n  \n  js: {\n    block: regex.block['//'],\n    detect: {\n      js: /['\"]([^'\"]+\\.js)['\"],?/gi,\n      css: /['\"]([^'\"]+\\.js)['\"],?/gi\n    },\n    replace: {\n      js: '\"{{filePath}}\",',\n      css: '\"{{filePath}}\",'\n    }\n  },\n\n  jade: {\n    block: /(([ \\t]*)\\/\\/-?\\s*bower:*(\\S*))(\\n|\\r|.)*?(\\/\\/-?\\s*endbower)/gi,\n    detect: {\n      js: /script\\(.*src=['\"]([^'\"]+)/gi,\n      css: /link\\(.*href=['\"]([^'\"]+)/gi\n    },\n    replace: {\n      js: 'script(src=\\'{{filePath}}\\')',\n      css: 'link(rel=\\'stylesheet\\', href=\\'{{filePath}}\\')'\n    }\n  },\n\n  slim: {\n    block: /(([ \\t]*)\\/!?\\s*bower:(\\S*))(\\n|\\r|.)*?(\\/!?\\s*endbower)/gi,\n    detect: {\n      js: /script.*src=['\"]([^'\"]+)/gi,\n      css: /link.*href=['\"]([^'\"]+)/gi\n    },\n    replace: {\n      js: 'script src=\\'{{filePath}}\\'',\n      css: 'link rel=\\'stylesheet\\' href=\\'{{filePath}}\\''\n    }\n  },\n\n  less: {\n    block: regex.block['//'],\n    detect: {\n      css: /@import\\s['\"](.+css)['\"]/gi,\n      less: /@import\\s['\"](.+less)['\"]/gi\n    },\n    replace: {\n      css: '@import \"{{filePath}}\";',\n      less: '@import \"{{filePath}}\";'\n    }\n  },\n\n  sass: {\n    block: regex.block['//'],\n    detect: {\n      css: /@import\\s(.+css)/gi,\n      sass: /@import\\s(.+sass)/gi,\n      scss: /@import\\s(.+scss)/gi\n    },\n    replace: {\n      css: '@import {{filePath}}',\n      sass: '@import {{filePath}}',\n      scss: '@import {{filePath}}'\n    }\n  },\n\n  scss: {\n    block: regex.block['//'],\n    detect: {\n      css: /@import\\s['\"](.+css)['\"]/gi,\n      sass: /@import\\s['\"](.+sass)['\"]/gi,\n      scss: /@import\\s['\"](.+scss)['\"]/gi\n    },\n    replace: {\n      css: '@import \"{{filePath}}\";',\n      sass: '@import \"{{filePath}}\";',\n      scss: '@import \"{{filePath}}\";'\n    }\n  },\n\n  styl: {\n    block: regex.block['//'],\n    detect: {\n      css: /@import\\s['\"](.+css)['\"]/gi,\n      styl: /@import\\s['\"](.+styl)['\"]/gi\n    },\n    replace: {\n      css: '@import \"{{filePath}}\"',\n      styl: '@import \"{{filePath}}\"'\n    }\n  },\n\n  yaml: {\n    block: /(([ \\t]*)#\\s*bower:*(\\S*))(\\n|\\r|.)*?(#\\s*endbower)/gi,\n    detect: {\n      js: /-\\s(.+js)/gi,\n      css: /-\\s(.+css)/gi\n    },\n    replace: {\n      js: '- {{filePath}}',\n      css: '- {{filePath}}'\n    }\n  },\n\n  haml: {\n    block: /(([ \\t]*)-#\\s*bower:*(\\S*))(\\n|\\r|.)*?(-#\\s*endbower)/gi,\n    detect: {\n      js: /\\%script\\{.*src:['\"]([^'\"]+)/gi,\n      css: /\\%link\\{.*href:['\"]([^'\"]+)/gi\n    },\n    replace: {\n      js: '%script{src:\\'{{filePath}}\\'}',\n      css: '%link{rel:\\'stylesheet\\', href:\\'{{filePath}}\\'}'\n    }\n  }\n};\n\n\nmodule.exports['default'] = module.exports.html;\nmodule.exports.htm = module.exports.html;\nmodule.exports.yml = module.exports.yaml;\n"}